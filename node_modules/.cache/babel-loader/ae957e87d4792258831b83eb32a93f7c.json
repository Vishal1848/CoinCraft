{"ast":null,"code":"import React from\"react\";import{Line}from\"react-chartjs-2\";import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from\"chart.js\";import{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);var Chart=function Chart(_ref){var _ref$arr=_ref.arr,arr=_ref$arr===void 0?[]:_ref$arr,currency=_ref.currency,days=_ref.days;var prices=[];var date=[];for(var i=0;i<arr.length;i++){if(days===\"24h\")date.push(new Date(arr[i][0]).toLocaleTimeString());else date.push(new Date(arr[i][0]).toLocaleDateString());prices.push(arr[i][1]);}var data={labels:date,datasets:[{label:\"Price in \".concat(currency),data:prices,borderColor:\"rgb(255,99,132)\",backgroundColor:\"rgba(255,99,132,0.5)\"}]};return/*#__PURE__*/_jsx(Line,{options:{responsive:true},data:data});};export default Chart;","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","arr","currency","days","prices","date","i","length","push","Date","toLocaleTimeString","toLocaleDateString","data","labels","datasets","label","borderColor","backgroundColor","responsive"],"sources":["C:/Users/yogesh/Downloads/react-crypto-app-master/react-crypto-app-master/src/components/Chart.jsx"],"sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Chart = ({ arr = [], currency, days }) => {\n  const prices = [];\n  const date = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    if (days === \"24h\") date.push(new Date(arr[i][0]).toLocaleTimeString());\n    else date.push(new Date(arr[i][0]).toLocaleDateString());\n    prices.push(arr[i][1]);\n  }\n\n  const data = {\n    labels: date,\n    datasets: [\n      {\n        label: `Price in ${currency}`,\n        data: prices,\n        borderColor: \"rgb(255,99,132)\",\n        backgroundColor: \"rgba(255,99,132,0.5)\",\n      },\n    ],\n  };\n\n  return (\n    <Line\n      options={{\n        responsive: true,\n      }}\n      data={data}\n    />\n  );\n};\n\nexport default Chart;\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,iBAAiB,CACtC,OACEC,KAAK,GAAIC,QAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CAAC,2CAElBP,OAAO,CAACQ,QAAQ,CACdP,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,KAAK,CACLC,OAAO,CACPC,MAAM,CACP,CAED,GAAMR,MAAK,CAAG,QAARA,MAAK,MAAqC,mBAA/BU,GAAG,CAAHA,GAAG,mBAAG,EAAE,UAAEC,QAAQ,MAARA,QAAQ,CAAEC,IAAI,MAAJA,IAAI,CACvC,GAAMC,OAAM,CAAG,EAAE,CACjB,GAAMC,KAAI,CAAG,EAAE,CAEf,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,GAAG,CAACM,MAAM,CAAED,CAAC,EAAE,CAAE,CACnC,GAAIH,IAAI,GAAK,KAAK,CAAEE,IAAI,CAACG,IAAI,CAAC,GAAIC,KAAI,CAACR,GAAG,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACI,kBAAkB,EAAE,CAAC,CAAC,IACnEL,KAAI,CAACG,IAAI,CAAC,GAAIC,KAAI,CAACR,GAAG,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACK,kBAAkB,EAAE,CAAC,CACxDP,MAAM,CAACI,IAAI,CAACP,GAAG,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACxB,CAEA,GAAMM,KAAI,CAAG,CACXC,MAAM,CAAER,IAAI,CACZS,QAAQ,CAAE,CACR,CACEC,KAAK,oBAAcb,QAAQ,CAAE,CAC7BU,IAAI,CAAER,MAAM,CACZY,WAAW,CAAE,iBAAiB,CAC9BC,eAAe,CAAE,sBACnB,CAAC,CAEL,CAAC,CAED,mBACE,KAAC,IAAI,EACH,OAAO,CAAE,CACPC,UAAU,CAAE,IACd,CAAE,CACF,IAAI,CAAEN,IAAK,EACX,CAEN,CAAC,CAED,cAAerB,MAAK"},"metadata":{},"sourceType":"module"}